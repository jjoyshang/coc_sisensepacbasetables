/* This table belongs to a set of base tables that pull important metrics for assessing our work on PAC races.
Here we are looking at the Manhattan DA Race 2021-06

This table brings in information on our Voter Contact efforts from ThruTalk and ThruText. The select include whether the 
contact was through Phone or Text, the unique can id of the voter contacted, whether we successully reached and 
had a conversation with the voter, and the latitude + longitude of the voter's address.
*/


DROP TABLE IF EXISTS coc_reporting.pacraces_20212022_votercontact ;
CREATE TABLE coc_reporting.pacraces_20212022_votercontact  AS


/* There are two CTEs for ThruTalk voter contact. This is the main table, which includes information on how many calls we 
did and which voter we reached. */
WITH thrutalk_1 AS (
  SELECT DISTINCT
    coc_call_results.date_called::Date AS date
    , 'Dial' AS contact_type
    , coc_call_results.id::varchar AS contact_id
    , coc_call_results.voter_id::varchar
    , NULL::varchar AS sender_phone
    , CASE WHEN result = 'Talked to Correct Person' THEN '1' ELSE NULL END AS conversation_flag
  FROM tmc_thrutalk.coc_call_results
  WHERE coc_call_results.service_account = 'coc_new_york_voters'
    AND coc_call_results.date_called BETWEEN '2021-05-01' AND '2021-06-30'
  
)


/* This second CTE for ThruTalk has information on how many staff/volunteers were doing the calling. Due to the ThruTalk
table structure, the caller information incompletely joins to the call information. Therefore, caller ids are in this CTE
so they can be counted in the dashboard. */
, thrutalk_2 AS (
  SELECT DISTINCT
    coc_callers.date::Date AS date
    ,'Dial' AS contact_type
    , NULL::varchar AS contact_id
    , NULL::varchar AS voter_id
    , coc_callers.phone::varchar AS sender_phone
    , NULL::varchar AS conversation_flag
  FROM tmc_thrutalk.coc_callers
  WHERE coc_callers.service_account = 'coc_new_york_voters'
    AND coc_callers.date BETWEEN '2021-05-01' AND '2021-06-30'
 )

, thrutext_base AS (
  SELECT 
    coc_messages.ttimestamp::Date AS date
    , 'Text' AS contact_type
    , coc_messages.conversation_id::varchar AS contact_id
    , thrutext_messages_append.van_id::varchar AS voter_id
    , coc_messages.sender_phone::varchar
    , CASE WHEN coc_messages.message_direction = 'incoming' THEN '1' ELSE NULL END AS conversation_flag
    , ROW_NUMBER () OVER (PARTITION BY coc_messages.conversation_id ORDER BY conversation_flag DESC NULLS LAST) AS dupes_ranked
    -- ^ Field needed to dedup message id and get one record per conversation id
  FROM tmc_thrutext.coc_messages
  LEFT JOIN coc_reporting.thrutext_messages_append
    ON thrutext_messages_append.conversation_id = coc_messages.conversation_id
  -- ! Adjust filter fields for Minneapolis
  WHERE coc_messages.campaign_name iLIKE '%BRAGG%'
    AND coc_messages.ttimestamp BETWEEN '2021-05-01' AND '2021-06-30'
    AND coc_messages.import_source iLIKE 'colorofchangeny%'
)

/*This CTE to dedup the ThruText data.*/
, thrutext AS (
  SELECT date, contact_type, contact_id, voter_id, sender_phone, conversation_flag
  FROM thrutext_base
  WHERE dupes_ranked = 1
)


, combine AS (
  SELECT * FROM thrutalk_1
  UNION ALL
  SELECT * FROM thrutalk_2
  UNION ALL
  SELECT * FROM thrutext
)


/*This Final Select joins to the voterfile to bring in the latitude and longitude of the voter.*/
SELECT 
  'Manhattan DA Primary 2021-06' AS election
    -- ^This field added because it will be used in a dashboard that can be filtered to see different races on the same page.
  , combine.* 
  , vb_tsmart_latitude AS latitude
  , vb_tsmart_longitude AS longitude
FROM combine
LEFT JOIN ts.ntl_current
  ON combine.voter_id = ntl_current.vb_smartvan_id
;

  
  -- Grant access:
GRANT SELECT ON coc_reporting.pacraces_20212022_votercontact TO GROUP coc;
GRANT ALL ON coc_reporting.pacraces_20212022_votercontact TO jshang, jharris1;